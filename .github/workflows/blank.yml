# This is a basic workflow to help you get started with Actions

name: Build and Release PDF from LaTeX

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
permissions:
  contents: write
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
    
      - uses: paulhatch/semantic-version@v5.0.2
        id: vnum
        with:
          tag_prefix: ""
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          version_format: "${major}.${minor}.${patch}-${increment}"
          bump_each_commit: true
    
      - name: Create Tag
        uses: negz/create-tag@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          # Version (e.g. v0.1.0)
          version: ${{ steps.vnum.outputs.version_tag }}
          message: Autorelease of PDF due to commit in main branch
      
      - name: Cleanup Directory
        run: rm -rf ./* 

      - name: Sleep Action
        # You may pin to the exact commit or the version.
        # uses: juliangruber/sleep-action@0ec9cf4f8d053aae56e4b402438184a31c6e87d3
        uses: juliangruber/sleep-action@v2.0.0
        with:
          # A time period as ms or string (100, 10s, 1m)
          time: "30s"
    
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Release Tag
        uses: Akryum/release-tag@v3.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # The name of the tag. This should come from the webhook payload, `github.GITHUB_REF` when a user pushes a new tag
          tag_name: ${{ steps.vnum.outputs.version_tag }}
          # The name of the release. For example, `Release v1.0.1`
          release_name: Release ${{ steps.vnum.outputs.version_tag }}
          prerelease: false

      - name: Compile Resume
        # You may pin to the exact commit or the version.
        # uses: antaljanosbenjamin/compile-latex@9bd5857f8d3c1a7e448116c9be00be52f20d5cc4
        uses: antaljanosbenjamin/compile-latex@v1.0.0
        with:
          # The LaTeX file to be compiled, relative to the root of the repository.
          file: resume.tex
          # Additional arguments to pass over to latexmk.
          args: -pdf
          
      - name: Upload Resume PDF as Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          # Artifact name
          name: resume-nickorlow
          # A file, directory or wildcard pattern that describes what to upload
          path: ./resume.pdf
          retention-days: 31
    
      - name: Release Resume PDF
        # You may pin to the exact commit or the version.
        # uses: djnicholson/release-action@e9a535b3eced09c460e07a84118fb74ae9b53236
        uses: djnicholson/release-action@v2.10
        with:
          # GitHub auth token
          token: ${{ secrets.GITHUB_TOKEN }}
          # Name of the tag for the release (will be associated with current branch)
          tag-name: ${{ steps.vnum.outputs.version_tag }}
          # File to release
          file: resume.pdf
          asset-name: "resume-nickorlow.pdf"

      - name: GitHub Upload Release Artifacts
        # You may pin to the exact commit or the version.
        # uses: Roang-zero1/github-upload-release-artifacts-action@87271b3f8dca9feb9e9d44381fddd2db7f09d6e1
        uses: Roang-zero1/github-upload-release-artifacts-action@v3.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Allows to pass an already created tag, forces update_existing to true.
          created_tag: ${{ steps.vnum.outputs.version_tag }}
          






      
